{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Hunt3r","text":"<p>Another Recon Tools. Hunt3r aims to simplify domain recognition by trying to combine three things :</p> <ul> <li>Speed of scans </li> <li>Accuracy of results</li> <li>Ease of use of the data</li> </ul> <p>Hunt3r does not want to be the most complete tool possible but the one that best fits our methodology.</p> <p>In an era where everyone relies heavily on automation, this thread from Jhaddix explains perfectly why you should build a tool that fits your needs.</p> <p>So before using Hunt3r ask yourself if the tool fits you. In our case the tool is mainly developed to scan a lot  of targets in parallel with speed by optimizing the results and the time spent.</p> <p>If your goal is to select a target and stay focused on it for a while, to have a large high quality amount of data,  we recommend ReconFTW.</p>"},{"location":"#alternatives","title":"Alternatives","text":"<ul> <li>Rengine : Offers a more complete tool with many features and a really nice web interface</li> <li>Osmedeus : Offers a more complete tool with also distributed scans</li> <li>ReconFTW : CLI tool that certainly offers the best possible recon with      distributed scans using Axiom and use previously tested tools to provide excellent results.</li> </ul>"},{"location":"changelog/","title":"Changelog","text":""},{"location":"changelog/#version-164","title":"Version 1.6.4","text":"<p>Backend Improvements :</p> <ul> <li>Handle new Intigriti login workflow</li> </ul> <p>Scan Improvements :</p> <ul> <li>Update WappaGo</li> </ul>"},{"location":"changelog/#version-163","title":"Version 1.6.3","text":"<p>Backend Improvements :</p> <ul> <li>Fix namespace confusion when calling methods</li> </ul> <p>Scan Improvements :</p> <ul> <li>Update WappaGo</li> </ul> <p>Backend Improvements :</p> <ul> <li>Fix error when webhook is missing</li> </ul>"},{"location":"changelog/#version-162","title":"Version 1.6.2","text":"<p>Scan Improvements :</p> <ul> <li>Update WappaGo</li> </ul>"},{"location":"changelog/#version-161","title":"Version 1.6.1","text":"<p>Scan Improvements :</p> <ul> <li>Fix Whoxy file output on intel scan</li> </ul>"},{"location":"changelog/#version-160","title":"Version 1.6.0","text":"<p>Frontend Improvements :</p> <ul> <li>Fix domains UI filtering</li> <li>Improve mobile version</li> <li>Improves the display of technologies with the versions</li> <li>Added statistics for Hackerone</li> </ul> <p>Backend Improvements :</p> <ul> <li>Add case insensitive search on programs</li> <li>Improvements on domain registration during a scan</li> <li>Fix H1 API login</li> <li>Adding versions for detected technologies</li> <li>Add log rotation to avoid overloading the disk space</li> </ul> <p>Scan Improvements :</p> <ul> <li>Update all tools versions</li> <li>Replace Naabu / HTTPX / Wappalyzer &amp; GoWitness by WappaGo</li> <li>Fix of a case where the status of a server is updated after its removal</li> </ul>"},{"location":"changelog/#version-150","title":"Version 1.5.0","text":"<p>Frontend Improvements :</p> <ul> <li>Improve Mobile Version</li> <li>Redirect to login when unauthorized</li> <li>Fix notifications box size</li> <li>Remove referer when clicking on a subdomain link</li> <li>Improve pagination</li> <li>Add multiples vulnerabilities deletion</li> </ul> <p>Backend Improvements :</p> <ul> <li>Add AWS as cloud provider</li> <li>Improve Nuclei configuration managements</li> <li>Improve platforms sync</li> </ul> <p>Scan Improvements :</p> <ul> <li>Tools update</li> <li>Add Slack notifications</li> <li>Add more exclusions to GAU</li> <li>Intel recon improvements</li> </ul>"},{"location":"changelog/#version-140","title":"Version 1.4.0","text":"<p>Scan Improvements :</p> <ul> <li>Fix exclusions when multiples regex is used</li> <li>Improve subdomains filtering</li> </ul>"},{"location":"changelog/#version-130","title":"Version 1.3.0","text":"<p>Scan Improvements :</p> <ul> <li>Improve Amass recursive check</li> <li>Improve HTTPX scan</li> </ul> <p>Backend Improvements :</p> <ul> <li>Dependabot fix</li> <li>Reverse scan order</li> </ul>"},{"location":"changelog/#version-120","title":"Version 1.2.0","text":"<p>Frontend Improvements :</p> <ul> <li>Add URLs management</li> </ul> <p>Scan Improvements :</p> <ul> <li>Improve concurrency</li> </ul>"},{"location":"changelog/#version-110","title":"Version 1.1.0","text":"<p>Bug Fix :</p> <ul> <li>Proxy URL #205 to not have <code>backend.local</code> when an NDD is not setup</li> </ul> <p>Frontend Improvements :</p> <ul> <li>Improve scan view UI</li> <li>Order vulnerabilities by criticity</li> </ul> <p>Backend Improvements :</p> <ul> <li>Check if Nuclei config is present before launching a scan</li> <li>Better display of server costs</li> <li>Fix the display on the order of the scans</li> </ul> <p>Scan Improvements :</p> <ul> <li>Added NodeJS Wappalyzer CLI temporarily to improve technology detection</li> </ul>"},{"location":"changelog/#version-10","title":"Version 1.0","text":"<ul> <li>First release with main features</li> </ul>"},{"location":"faq/","title":"Faq","text":"<p>Can you add XYZ tool ?</p> <p>The short answer is no. Hunt3r is built around a methodology that we have adapted to our needs and what we do  with the data we collect, rather than launching an arsenal of tools that do more or less the same thing we prefer  to take our time to test them individually and select the ones that have the best results and best suit our needs.</p> <p>Why XYZ Platform is not included ?</p> <p>Simply because it's a platform we don't use and therefore we don't have the data to integrate it easily. However,  don't hesitate to make a Pull Request.</p> <p>Why XYZ Provider is not included ?</p> <p>Version 1.0 is only available with Scaleway as it is the one we use on a daily basis, however we are planning to  integrate other cloud providers with at least AWS in the first time.</p>"},{"location":"security/","title":"Security","text":"<p>Not being a developer and even if it were, it is not impossible that Hunt3r suffers from security weaknesses. If you think you have detected a vulnerability, please contact Jomar or Serizao.</p> <p>If you want to check the robustness of Hunt3r, we consider the following to be the most important security issues :</p> <ul> <li>Bypass of the login page / JWT Check</li> <li>Lack of control check between a classic user and an administrator</li> <li>Bypass 'hunt3r_token' token control for external requests</li> <li>Bypass of mesh control from outside</li> </ul> <p>The following issues have already been identified but do not represent a direct risk to Hunt3r and will  be corrected as development continues :</p> <ul> <li>Path Traversal : Possible  in 3 different places in the Hunt3r API<ul> <li>Limited impact, allows to overwrite some files or to know if a file exists<ul> <li>Possibly fixed, no bypass was identified but a second check should be done</li> </ul> </li> </ul> </li> <li>OS Command Injection : Possible to escape the launch of the scan script and inject an arbitrary command<ul> <li>Consider as low risk / no impact because the command is executed on a fresh server without data,    moreover the script is already initially intended to launch arbitrary commands ...<ul> <li>It remains preferable to correct this, for \"good practices\".</li> </ul> </li> </ul> </li> </ul>"},{"location":"features/","title":"Hunt3r Features","text":"<ul> <li> User management</li> <li> Providers management<ul> <li> Scaleway</li> <li> AWS</li> </ul> </li> <li> Connect another Hunt3r platform (Meshs)</li> <li> Tools management<ul> <li> Custom Amass config</li> <li> Custom Nuclei config</li> <li> Custom Nuclei templates management</li> <li> External API Key Management</li> </ul> </li> <li> BugBounty Platforms Integration<ul> <li> YesWeHack</li> <li> Intigriti<ul> <li> Generate Intigriti Invoice</li> </ul> </li> <li> Hackerone</li> <li> Platform programs / scopes synchronisation<ul> <li> YesWeHack</li> <li> Intigriti</li> <li> Hackerone</li> </ul> </li> <li> Platform statistiques<ul> <li> YesWeHack</li> <li> Intigriti</li> <li> Hackerone</li> </ul> </li> </ul> </li> <li> Servers management<ul> <li> Show servers informations with cost</li> </ul> </li> <li> Notifications management</li> <li> Leaks management</li> <li> Vulnerabilities management</li> <li> Scans management<ul> <li> Scan engines management</li> <li> Slack notifications during scan</li> <li> Recon scan<ul> <li> Mesh Integration</li> <li> Amass / Amass Active</li> <li> Get associated domains</li> <li> Get Leaks</li> <li> Port scan</li> <li> Domains probing</li> <li> Subdomains Filtering</li> <li> Domain exclusion via regex</li> <li> CDN Filtering</li> <li> Get All URLs</li> <li> Screenshots</li> <li> Permutations</li> <li> Nuclei<ul> <li> With all templates</li> <li> With custom templates</li> </ul> </li> </ul> </li> <li> Nuclei scan<ul> <li> Scan specific domain with specific templates</li> <li> Scan specific domain with all templates</li> <li> Scan all domains with specific templates</li> <li> Scan all domains with all templates</li> </ul> </li> </ul> </li> </ul>"},{"location":"features/api_key/","title":"External API Key","text":"<p>Currently external third party servers are used in Hunt3r and therefore require an API key: </p> <pre><code>{\n    \"dehashed\": [\n        \"user\",\n        \"api_key\"\n    ],\n    \"c99\": [\n        \"api_key\"\n    ],\n    \"whoxy\": [\n        \"api_key\"\n    ],\n    \"slack\": [\n        \"webhook\"\n    ],\n    \"interactsh\": [\n        \"url\",\n        \"api_key\"\n    ]\n}\n</code></pre> <p>When adding one of these services, a validity check will be performed. Depending on the service, it may consume a credit.</p> <p>This is the case of Dehashed &amp; Whoxy, however, then when launching a scan no verification will be done, so it is your  responsibility to make sure you have the necessary credits before launching a scan.</p>"},{"location":"features/engines/","title":"Engines management","text":"<p>Before launching a scan it will be necessary to configure an Engine. The use of engines allows to keep predefined parameters and to simplify the launching of scans on several targets with the same parameters.</p> <p></p> <p>The most important parameter that needs to be thought through beforehand here is the instance type you want to use. The more powerful the instance the more expensive it will be. However,</p> <ul> <li>A more powerful instance will speed up some steps<ul> <li>Some steps being executed with concurrency, the more powerful the instance, the higher the number of threads will be used</li> </ul> </li> <li>If your target has more than 20 000 domains we recommend to use at least a DEV1-M instance</li> </ul>"},{"location":"features/meshs/","title":"Meshs management","text":"<p>In Hunt3r we have implemented a mesh system that allows you to query a friend's Hunt3r instance to retrieve the  subdomains they already have in their instance.</p>"},{"location":"features/meshs/#configure-a-mesh","title":"Configure a mesh","text":"<p>In /admin/meshs you will only need to create a new mesh with the following information:</p> <ul> <li>The name of the mesh (arbitrary)</li> <li>The URL of your friend's Hunt3r instance</li> <li>A strong token</li> </ul> <p></p> <p>On his side, your friend will also have to define a mesh instance with your URL and the same token.</p> <p>Example :</p> <ul> <li>I define the instance with the name <code>Serizao</code> and the URL <code>https://hunt3r.serizao.tld</code> and the token <code>SUPER_STRONG</code></li> <li>On his side, the friend defines the instance <code>Jomar</code> with the URL <code>https://hunt3r.jomar.tld</code> and also the token <code>SUPER_STRONG</code></li> </ul> <p>So during the scan, if the mesh option is selected, a request with the following format will be sent :</p> <pre><code>POST /api/domains/mesh\nHost: hunt3r.serizao.tld\n...\n\n{ \n  \"url\": \"https://hunt3r.jomar.tld\",\n  \"token\": \"SUPER_STRONG\",\n  \"domain\": \"domain.tld\"\n}\n</code></pre> <p>At this moment, the friendly instance will check that a mesh is defined with your URL and the token. And if so, will return the requested subdomains</p>"},{"location":"features/meshs/#direct-synchronisation","title":"Direct synchronisation","text":"<p>It is also possible to make a direct synchronization of domains without launching a new scan</p> <p></p> <p>In the mesh settings, just click on \"choose domains\" to sync to display the list of domains available on the selected instance and then click on the sync button</p> <p></p>"},{"location":"features/bounty_platforms/invoices/","title":"Invoices","text":"<p>French only</p> <p>Invoice generation is only suitable for people living in France and only for Intigriti</p> <p>Unlike YesWeHack, the management of the invoicing is not done by Intigriti for the French auto entrepreneurs. This system allows you to generate an invoice (with or without VAT) for a selected period.</p> <p></p>"},{"location":"features/bounty_platforms/scopes/","title":"Programs &amp; Scopes Synchronisation","text":"<p>Hunt3r allows you to synchronize your programs &amp; scopes from YesWeHack, Intigriti and Hackerone platforms, this feature allows you to directly launch a scan on a scope or a set of scopes.</p> <p></p> <p>Before being stored, scopes are normalized.</p> <ul> <li>Only web assets are present</li> <li><code>domain.(fr|com|tld)</code> will be standardized into 3 distinct areas</li> </ul> <p></p>"},{"location":"features/bounty_platforms/statistics/","title":"Statistics","text":"<p>In addition to synchronizing your programs &amp; scopes, it is also possible to synchronize your reports in Hunt3r to display statistics related to them</p> <p></p>"},{"location":"features/scans/recon/","title":"Recon Scans","text":"<p>Hunt3r allows you to perform recognition scans trying to get the best quality results possible.</p> <p>It will first be necessary to create an engine with the scan type set to 'recon'.</p> <p>You just have to launch a scan, either directly via the scope of a program or from the 'Scan' tab, at this moment you just have to select the engine configured previously, you can also indicate patterns of exclusions for the subdomains that you do not want scanned / reassembled in your instance Hunt3r</p> <p></p> <p>Scan exclusion</p> <p>Just indicate the desired pattern to exclude. If you indicate <code>cdn</code>, the following regex will be created : <code>.*cdn.*</code> thus excluding all domains containing this pattern.</p> <p>The following specific tools are used during a recon scan :</p> <ul> <li>Dehashed : Queries the Dehashed API to retrieve known leaks associated with the domain<ul> <li>A filtering step is performed to save only the records that contain a password</li> </ul> </li> <li>Amass : Is not presented anymore, well used it is simply the best or moreover it is able to do a lot of things<ul> <li>It is possible to launch it in active mode with the generation of permutations (with subdomains list from Six2dez), it also performs DNS resolution and wildcard cleaning</li> </ul> </li> <li>Whoxy : Allows you to perform reverse whois on the target domain, thus recovering all domains associated with the registrant and the company</li> <li>C99 : C99 is a good source of data, before relaunching Amass on each target retrieved via Whoxy we check if there are at least 3 subdomains to avoid launching Amass for nothing and waste time / use API keys</li> <li>GAU : Fetch known URLs from AlienVault's Open Threat Exchange, the Wayback Machine, and Common Crawl.<ul> <li>The following extensions are excluded : <code>png,jpg,jpeg,gif,svg,js,css,ttf,woff,woff</code></li> </ul> </li> <li>WappaGo<ul> <li>Performs a port scan (80,443 if CDN otherwise top 100) before checking if the detected ports are reachable in HTTP or HTTPS</li> <li>Check if targets are responding in HTTP/HTTPS and retrieve information such as the status code</li> <li>Retrieve technologies with Chrome Headless</li> <li>Take a screenshot</li> </ul> </li> <li>Nuclei : Vulnerability scanner<ul> <li>Possible to launch Nuclei with a custom config file, with all the templates or your own templates</li> </ul> </li> </ul> <p></p>"},{"location":"getting_started/first_setup/","title":"First Setup","text":""},{"location":"getting_started/first_setup/#change-your-password","title":"Change your password","text":"<p>The first thing to do is to change your login information by going to your profile /pages/user</p> <p></p>"},{"location":"getting_started/first_setup/#configure-a-cloud-provider","title":"Configure a Cloud Provider","text":"<p>SSH Key</p> <p>An SSH key will be required by Hunt3r to deploy and manage your servers, however it is possible to configure a specific SSH key for Hunt3r and by provider</p> <p>To be able to launch a scan you will first have to configure a Cloud Provider on the page /admin/cloud/settings.</p>"},{"location":"getting_started/first_setup/#scaleway-configuration","title":"Scaleway configuration","text":"<p>First of all it is necessary to add an SSH key on https://console.scaleway.com/project/credentials</p> <p></p> <p>As well as a Keys API for Hunt3r, still on the same page</p> <p></p>"},{"location":"getting_started/first_setup/#aws-configuration","title":"AWS configuration","text":"<p>You need to add a user here with EC2 rights</p> <p></p> <p>You have to register your SSH key (without passphrase) here with the name 'hunt3r' (required), the key must be registered in the same region as the region used on the dashboard.</p> <p></p> <p>The default group security must be modified to allow SSH connections (Inbound rules) at least here</p> <p></p>"},{"location":"getting_started/first_setup/#nuclei-configuration","title":"Nuclei configuration","text":"<p>If you want to use Nuclei, we advise you to use a custom configuration file to add template exclusions on /admin/tools/settings. In case no file is filled in, all templates will be used</p> <p>If necessary, you can use our suggested configuration</p>"},{"location":"getting_started/first_setup/#amass-configuration","title":"Amass configuration","text":"<p>The last step is to add your Amass configuration on /admin/tools/settings, it is indeed not possible to start a scan without putting a configuration file. Since this tool is the heart of the recognition, we advise you to have as many API keys as possible.</p> <p>See How to Use Amass More Effectively for Bug Bounties</p> <p>The default configuration file can be found here.</p> <p></p>"},{"location":"getting_started/installation/","title":"Installation","text":"<p>OS Support</p> <p>The Hunt3r installation has only been tested on Ubuntu 22.04 &amp; Debian 11 with an x86 architecture.</p> <p>Local installation</p> <p>Hunt3r must be installed on an external VPS to work, a local installation will allow you to use the UI but your scans will not be able to upload information to the API</p> <p>The installation of Hunt3r can be done in two ways:</p> <ul> <li>Quick with just the project setup available at http://0.0.0.0</li> <li>Complete with Traefik as reverse proxy to deliver an HTTPS certificate</li> </ul>"},{"location":"getting_started/installation/#quick-installation","title":"Quick Installation","text":"<p>Clone the Hunt3r Repository :</p> <pre><code>git clone https://github.com/EasyRecon/Hunt3r\ncd Hunt3r\n</code></pre> <p>Launching the dockers</p> <pre><code>docker-compose run backend rake db:create\ndocker-compose run backend rake db:migrate\ndocker-compose run backend rake db:seed\n</code></pre>"},{"location":"getting_started/installation/#complete-installation-with-ssl","title":"Complete Installation With SSL","text":"<p>To keep your installation clean enough and to be modular in case you want to have other dockers on your server exposed in HTTPS, we will use Traefik which is a reverse proxy for Docker. It will redirect the traffic to the corresponding dockers and also deliver the HTTPS certificates via Let's Encrypt.</p> <p>Before starting you will obviously need docker, docker-compose and to have two domain names pointing to your server</p> <ul> <li>traefik.domain.tld</li> <li>hunt3r.domain.tld</li> </ul> <pre><code>#!/bin/bash\n\napt-get update &amp;&amp; apt-get upgrade -y\napt install apt-transport-https ca-certificates curl software-properties-common\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg\necho \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\" | sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null\n\napt update\napt install docker-ce\ncurl -SL https://github.com/docker/compose/releases/download/v2.5.0/docker-compose-linux-x86_64 -o /usr/local/bin/docker-compose\nchmod +x /usr/local/bin/docker-compose\n\nmkdir /root/Traefik\ncd /root/Traefik\n\nwget -O docker-compose.yml https://docs.hunt3r.ovh/assets/files/docker-compose.traefik.yml\nnano docker-compose.yml # Update 'traefik.domain.tld' line 23 with your custom subdomain\n\nwget -O traefik.toml https://docs.hunt3r.ovh/assets/files/traefik.toml\nnano traefik.toml # Update 'contact@domain.tld' line 16 with your email\n\nmkdir letsencrypt\ntouch letsencrypt/acme.json\nchmod 0600 letsencrypt/acme.json\n\nmkdir logs\n\ndocker-compose up -d\n</code></pre> <p>Now clone the Hunt3r repository :</p> <pre><code>cd /root\ngit clone https://github.com/EasyRecon/Hunt3r\ncd Hunt3r\n</code></pre> <p>Get the configuration file with the Traefik directives</p> <pre><code>rm docker-compose.yml &amp;&amp; wget -O docker-compose.yml https://docs.hunt3r.ovh/assets/files/docker-compose.hunt3r.yml\nnano docker-compose.yml # Modify 'traefik.domain.tld' with your custom domain line 58\n</code></pre> <p>Launching the dockers</p> <pre><code>docker-compose up -d\ndocker-compose run backend rake db:create\ndocker-compose run backend rake db:migrate\ndocker-compose run backend rake db:seed\n</code></pre>"},{"location":"getting_started/installation/#webui-access-credentials","title":"WebUI Access &amp; Credentials","text":"<p>Once the Docker environment is up, you can access the application through the Web UI available on http://127.0.0.1 or https://hunt3r.domain.tld with the following default credentials :</p> <ul> <li>Email address : admin@admin.tld</li> <li>Password : password</li> </ul>"}]}